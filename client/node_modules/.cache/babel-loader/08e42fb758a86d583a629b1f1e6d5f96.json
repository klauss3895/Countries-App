{"ast":null,"code":"const initialState = {\n  countries: [],\n  allCountries: [],\n  detail: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FILTER_SOUTH_AMERICA\":\n      const paises = state.allCountries;\n      const filtrado = action.payload === \"South America\" ? paises.filter(el => el.subregion === action.payload) : southAmerica;\n      return { ...state,\n        countries: filtrado\n      };\n\n    case \"GET_COUNTRIES\":\n      return { ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n\n    case \"FILTER_BY_CONTINENT\":\n      const allcountries = state.allCountries;\n      const countriesFiltered = action.payload === \"All\" ? allcountries : allcountries.filter(el => el.continent === action.payload);\n      return { ...state,\n        countries: countriesFiltered\n      };\n\n    case \"FILTER_BY_ACTIVITY\":\n      return { ...state,\n        countries: countriesFiltered\n      };\n\n    case \"GET_NAME_COUNTRIES\":\n      return { ...state,\n        countries: action.payload\n      };\n\n    case \"POST_ACTIVITY\":\n      return { ...state\n      };\n\n    case \"GET_ACTIVITY\":\n      return { ...state,\n        countries: action.payload\n      };\n\n    case \"GET_DETAIL\":\n      return { ...state,\n        detail: action.payload\n      };\n\n    case \"FILTER_BY_NAME\":\n      let sortedArray = action.payload === \"Asc\" ? state.countries.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (b.name > a.name) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        if (b.name > a.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: sortedArray\n      };\n\n    case \"FILTER_BY_POPULATION\":\n      let sortedArrayPopulation = action.payload === \"Asc\" ? state.countries.sort(function (a, b) {\n        if (a.population > b.population) {\n          return 1;\n        }\n\n        if (b.population > a.population) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        if (a.population > b.population) {\n          return -1;\n        }\n\n        if (b.population > a.population) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: sortedArrayPopulation\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/klaus/Descargas/segundo PI/PI-Countries/PI-Countries-main/client/src/reducer/index.js"],"names":["initialState","countries","allCountries","detail","rootReducer","state","action","type","paises","filtrado","payload","filter","el","subregion","southAmerica","allcountries","countriesFiltered","continent","sortedArray","sort","a","b","name","sortedArrayPopulation","population"],"mappings":"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","sourcesContent":["\n\nconst initialState = {\n    countries:[],\n    allCountries:[],\n    detail:[]\n}\n\nfunction rootReducer (state = initialState, action) {\n    switch (action.type) {\n        case \"FILTER_SOUTH_AMERICA\":\n            const paises= state.allCountries\n            const filtrado = action.payload===\"South America\"? paises.filter(el=>el.subregion===action.payload):southAmerica\n            return{\n                ...state,\n                countries: filtrado\n            }\n        case \"GET_COUNTRIES\":\n            return {\n                ...state,\n                countries:action.payload,\n                allCountries:action.payload\n            }\n            \n        case \"FILTER_BY_CONTINENT\":\n                const allcountries= state.allCountries\n                const countriesFiltered= action.payload === \"All\" ? allcountries : allcountries.filter(el => el.continent === action.payload)\n            return {\n                ...state,\n                countries: countriesFiltered\n            }\n        case \"FILTER_BY_ACTIVITY\":\n        return {\n            ...state,\n            countries: countriesFiltered\n        }\n        case \"GET_NAME_COUNTRIES\":\n            return {\n                ...state,\n                countries:action.payload\n            }\n        case \"POST_ACTIVITY\":\n            return {\n                ...state\n            }\n        case \"GET_ACTIVITY\":\n        return {\n            ...state,\n            countries:action.payload\n        }\n        case \"GET_DETAIL\":\n            return {\n                ...state,\n                detail:action.payload\n            }\n        case \"FILTER_BY_NAME\":\n            let sortedArray = action.payload === \"Asc\" ? state.countries.sort(function (a,b){\n                if(a.name > b.name){\n                    return 1;\n                }\n                if(b.name > a.name){\n                    return -1;\n                }\n                return 0\n            }) :\n            state.countries.sort(function(a,b){\n                if(a.name > b.name){\n                    return -1;\n                }\n                if(b.name > a.name){\n                    return 1;\n                }\n                return 0\n            })\n            return {\n                ...state,\n                countries:sortedArray\n            }\n\n        case \"FILTER_BY_POPULATION\":\n            let sortedArrayPopulation = action.payload === \"Asc\" ? state.countries.sort(function (a,b){\n                if(a.population > b.population){\n                    return 1;\n                }\n                if(b.population > a.population){\n                    return -1;\n                }\n                return 0\n            }) :\n            state.countries.sort(function(a,b){\n                if(a.population > b.population){\n                    return -1;\n                }\n                if(b.population > a.population){\n                    return 1;\n                }\n                return 0\n            })\n            return {\n                ...state,\n                countries:sortedArrayPopulation\n            }\n        \n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}